df = read.csv('covid_dataset/us-covid19/us_total.csv', header = TRUE)
df
new_case = df[, c('new_cases')]
hist(new_case)
remotes::install_github(“GuangchuangYu/nCov2019”)
require(nCov2019)
require(dplyr)
remotes::install_github(“GuangchuangYu/nCov2019”)
remotes::install_github(“GuangchuangYu/nCov2019”)
remotes::install_github('GuangchuangYu/nCov2019')
githubinstall()
install.packages("dplyr")
install_github(“GuangchuangYu/nCov2019”)
install_github('GuangchuangYu/nCov2019)
install_github('GuangchuangYu/nCov2019)
install_github('GuangchuangYu/nCov2019')
install.packages("nCov2019")
x <- get_nCov2019()
y <- load_nCov2019()
line(density(new_case))
lines(density(new_case))
plot(density(new_case))
new_case
library("nCov2019")
res <- query()
x = res$latest
res <- query()
x = res$latest
x = res$global
res <- query()
names(res)
install.packages("reshape2")
res <- query()
names(res)
x <- res$latest
y <- res$historical
country_list =  x["global"]$country[1:10]
y[country_list]  %>%
subset( date > as.Date("2020-10-01") ) %>%
group_by(country) %>%
arrange(country,date) %>%
mutate(increase = cases - lag(cases, default =  first(cases))) -> df
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
library("ggrepel")
install.packages('ggrepel')
library("ggrepel")
library("dplyr")
library("ggrepel")
x <- res$latest
y <- res$historical
country_list =  x["global"]$country[1:10]
y[country_list]  %>%
subset( date > as.Date("2020-10-01") ) %>%
group_by(country) %>%
arrange(country,date) %>%
mutate(increase = cases - lag(cases, default =  first(cases))) -> df
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
x <- res$latest
y <- res$historical
country_list =  x["global"]$country['Italy']
y[country_list]  %>%
subset( date > as.Date("2020-10-01") ) %>%
group_by(country) %>%
arrange(country,date) %>%
mutate(increase = cases - lag(cases, default =  first(cases))) -> df
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
x <- res$latest
y <- res$historical
country_list =  x["global"]$country[1:10]
y[country_list]  %>%
subset( date > as.Date("2020-10-01") ) %>%
group_by(country) %>%
arrange(country,date) %>%
mutate(increase = cases - lag(cases, default =  first(cases))) -> df
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
library('ggrepel')
library('ggplot2')
y <- res$historical
country = "United States"
y[country] -> d
d <- gather(d, curve, count, -date, -country)
ggplot(d, aes(date, count, color = curve)) + geom_point() + geom_line() +
labs(x=NULL,y=NULL,title=paste("Trend of cases, recovered and deaths in", country)) +
scale_color_manual(values=c("#f39c12", "#dd4b39", "#00a65a")) +
theme_bw() +
geom_label_repel(aes(label = paste(curve,count)),
data = d[d$date == max(d$date), ], hjust = 1) +
theme(legend.position = "none",
axis.text = element_text(angle = 15, hjust = 1)) +
scale_x_date(date_labels = "%Y-%m-%d")
y <- res$historical
country = "India"
y[country] -> d
d <- gather(d, curve, count, -date, -country)
ggplot(d, aes(date, count, color = curve)) + geom_point() + geom_line() +
labs(x=NULL,y=NULL,title=paste("Trend of cases, recovered and deaths in", country)) +
scale_color_manual(values=c("#f39c12", "#dd4b39", "#00a65a")) +
theme_bw() +
geom_label_repel(aes(label = paste(curve,count)),
data = d[d$date == max(d$date), ], hjust = 1) +
theme(legend.position = "none",
axis.text = element_text(angle = 15, hjust = 1)) +
scale_x_date(date_labels = "%Y-%m-%d")
library("nCov2019")
res <- query()
names(res)
library("dplyr")
library("ggrepel")
x <- res$latest
y <- res$historical
country_list =  x["global"]$country[1:10]
y[country_list]  %>%
subset( date > as.Date("2020-10-01") ) %>%
group_by(country) %>%
arrange(country,date) %>%
mutate(increase = cases - lag(cases, default =  first(cases))) -> df
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
library('tidyr')
library('ggrepel')
library('ggplot2')
y <- res$historical
country = "India"
y[country] -> d
d <- gather(d, curve, count, -date, -country)
ggplot(d, aes(date, count, color = curve)) + geom_point() + geom_line() +
labs(x=NULL,y=NULL,title=paste("Trend of cases, recovered and deaths in", country)) +
scale_color_manual(values=c("#f39c12", "#dd4b39", "#00a65a")) +
theme_bw() +
geom_label_repel(aes(label = paste(curve,count)),
data = d[d$date == max(d$date), ], hjust = 1) +
theme(legend.position = "none",
axis.text = element_text(angle = 15, hjust = 1)) +
scale_x_date(date_labels = "%Y-%m-%d")
x <- res$latest
y <- res$historical
country_list =  x["global"]$country[1:10]
y[country_list]  %>%
subset( date > as.Date("2020-10-01") ) %>%
group_by(country) %>%
arrange(country,date) %>%
mutate(increase = cases - lag(cases, default =  first(cases))) -> df
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
library('tidyr')
library('ggrepel')
library('ggplot2')
y <- res$historical
country = "USA"
y[country] -> d
d <- gather(d, curve, count, -date, -country)
ggplot(d, aes(date, count, color = curve)) + geom_point() + geom_line() +
labs(x=NULL,y=NULL,title=paste("Trend of cases, recovered and deaths in", country)) +
scale_color_manual(values=c("#f39c12", "#dd4b39", "#00a65a")) +
theme_bw() +
geom_label_repel(aes(label = paste(curve,count)),
data = d[d$date == max(d$date), ], hjust = 1) +
theme(legend.position = "none",
axis.text = element_text(angle = 15, hjust = 1)) +
scale_x_date(date_labels = "%Y-%m-%d")
y <- res$historical
d <- y["global"]
dd <- d %>%
as_tibble %>%
filter(cases > 1000000) %>%
group_by(country) %>%
mutate(days_since_1m = as.numeric(date - min(date))) %>%
ungroup
breaks=c(1000, 10000, 20000, 50000, 500000,500000,5000000,20000000)
p <- ggplot(dd, aes(days_since_1m, cases, color = country)) +
geom_smooth(method='lm', aes(group=1),
data = dd,
color='grey10', linetype='dashed') +
geom_line(size = 0.8) +
geom_point(pch = 21, size = 1) +
scale_y_log10(expand = expansion(add = c(0,0.1)),
breaks = breaks, labels = breaks) +
scale_x_continuous(expand = expansion(add = c(0,1))) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(3,15,3,3,"mm")
) +
coord_cartesian(clip = "off") +
geom_shadowtext(aes(label = paste0(" ",country)), hjust=0, vjust = 0,
data = . %>% group_by(country) %>% top_n(1,days_since_1m),
bg.color = "white") +
labs(x = "Number of days since 1,000,000th case", y = "",
subtitle = "Total number of cases")
print(p)
y <- res$historical
d <- y["global"]
dd <- d %>%
as_tibble %>%
filter(cases > 1000000) %>%
group_by(country) %>%
mutate(days_since_1m = as.numeric(date - min(date))) %>%
ungroup
breaks=c(1000, 10000, 20000, 50000, 500000,500000,5000000,20000000)
p <- ggplot(dd, aes(days_since_1m, cases, color = country)) +
geom_smooth(method='lm', aes(group=1),
data = dd,
color='grey10', linetype='dashed') +
geom_line(size = 0.8) +
geom_point(pch = 21, size = 1) +
scale_y_log10(expand = expansion(add = c(0,0.1)),
breaks = breaks, labels = breaks) +
scale_x_continuous(expand = expansion(add = c(0,1))) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(3,15,3,3,"mm")
) +
coord_cartesian(clip = "off") +
geom_shadowtext(aes(label = paste0(" ",country)), hjust=0, vjust = 0,
data = . %>% group_by(country) %>% top_n(1,days_since_1m),
bg.color = "white") +
labs(x = "Number of days since 1,000,000th case", y = "",
subtitle = "Total number of cases")
install.packages("shadowtext")
y <- res$historical
d <- y["global"]
dd <- d %>%
as_tibble %>%
filter(cases > 1000000) %>%
group_by(country) %>%
mutate(days_since_1m = as.numeric(date - min(date))) %>%
ungroup
breaks=c(1000, 10000, 20000, 50000, 500000,500000,5000000,20000000)
p <- ggplot(dd, aes(days_since_1m, cases, color = country)) +
geom_smooth(method='lm', aes(group=1),
data = dd,
color='grey10', linetype='dashed') +
geom_line(size = 0.8) +
geom_point(pch = 21, size = 1) +
scale_y_log10(expand = expansion(add = c(0,0.1)),
breaks = breaks, labels = breaks) +
scale_x_continuous(expand = expansion(add = c(0,1))) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(3,15,3,3,"mm")
) +
coord_cartesian(clip = "off") +
geom_shadowtext(aes(label = paste0(" ",country)), hjust=0, vjust = 0,
data = . %>% group_by(country) %>% top_n(1,days_since_1m),
bg.color = "white") +
labs(x = "Number of days since 1,000,000th case", y = "",
subtitle = "Total number of cases")
x <- res$latest
y <- res$historical
country_list =  x["global"]$country[1:10]
y[country_list]  %>%
subset( date > as.Date("2020-10-01") ) %>%
group_by(country) %>%
arrange(country,date) %>%
mutate(increase = cases - lag(cases, default =  first(cases))) -> df
ggplot(df, aes(x=date, y=increase, color=country  ))+
geom_smooth() +
geom_label_repel(aes(label = paste(country,increase)),
data = df[df$date == max(df$date), ], hjust = 1) +
labs(x=NULL,y=NULL)+
theme_bw() + theme(legend.position = 'none')
x <- get_nCov2019()
y <- load_nCov2019()
x
#obtain top 10 country
d <- y[‘global’] #extract global data
d <- d[d$country != ‘China’,] #exclude China
n <- d %>% filter(time == time(y)) %>%
top_n(10, cum_confirm) %>%
arrange(desc(cum_confirm))
#plot top 10
require(ggplot2)
require(ggrepel)
ggplot(filter(d, country %in% n$country, d$time > ‘2020–02–15’),
aes(time, cum_confirm, color=country)) +
geom_line() +
geom_text_repel(aes(label=country),
function(d) d[d$time == time(y),]) +
theme_minimal(base_size=14) +
theme(legend.position = “none”)
#obtain top 10 country
d <- y[‘global’] #extract global data
d <- d[d$country != 'China',] #exclude China
n <- d %>% filter(time == time(y)) %>%
top_n(10, cum_confirm) %>%
arrange(desc(cum_confirm))
#plot top 10
require(ggplot2)
require(ggrepel)
ggplot(filter(d, country %in% n$country, d$time > ‘2020–02–15’),
aes(time, cum_confirm, color=country)) +
geom_line() +
geom_text_repel(aes(label=country),
function(d) d[d$time == time(y),]) +
theme_minimal(base_size=14) +
theme(legend.position = 'none')
#obtain top 10 country
d <- y[‘global’] #extract global data
d <- d[d$country = 'USA',]
n <- d %>% filter(time == time(y)) %>%
top_n(10, cum_confirm) %>%
arrange(desc(cum_confirm))
#obtain top 10 country
d <- y[‘global’] #extract global data
d <- d[d$country != 'USA',]
n <- d %>% filter(time == time(y)) %>%
top_n(10, cum_confirm) %>%
arrange(desc(cum_confirm))
#obtain top 10 country
d <- y[‘global’] #extract global data
d <- d[d$country == 'USA',]
n <- d %>% filter(time == time(y)) %>%
top_n(10, cum_confirm) %>%
arrange(desc(cum_confirm))
#obtain top 10 country
d <- y[‘global’] #extract global data
d <- d[d$country = 'USA',]
n <- d %>% filter(time == time(y)) %>%
top_n(10, cum_confirm) %>%
arrange(desc(cum_confirm))
#obtain top 10 country
d <- y[‘global’] #extract global data
d <- d[d$country = 'United States',]
n <- d %>% filter(time == time(y)) %>%
top_n(10, cum_confirm) %>%
arrange(desc(cum_confirm))
#plot top 10
require(ggplot2)
require(ggrepel)
ggplot(filter(d, country %in% n$country, d$time > ‘2020–02–15’),
aes(time, cum_confirm, color=country)) +
geom_line() +
geom_text_repel(aes(label=country),
function(d) d[d$time == time(y),]) +
theme_minimal(base_size=14) +
theme(legend.position = 'none')
dd <- d %>%
as_tibble %>%
filter(cases > 1000000) %>%
group_by(country) %>%
mutate(days_since_1m = as.numeric(date - min(date))) %>%
ungroup
breaks=c(1000, 10000, 20000, 50000, 500000,500000,5000000,20000000)
p <- ggplot(dd, aes(days_since_1m, cases, color = country)) +
geom_smooth(method='lm', aes(group=1),
data = dd,
color='grey10', linetype='dashed') +
geom_line(size = 0.8) +
geom_point(pch = 21, size = 1) +
scale_y_log10(expand = expansion(add = c(0,0.1)),
breaks = breaks, labels = breaks) +
scale_x_continuous(expand = expansion(add = c(0,1))) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
legend.position = "none",
plot.margin = margin(3,15,3,3,"mm")
) +
coord_cartesian(clip = "off") +
geom_shadowtext(aes(label = paste0(" ",country)), hjust=0, vjust = 0,
data = . %>% group_by(country) %>% top_n(1,days_since_1m),
bg.color = "white") +
labs(x = "Number of days since 1,000,000th case", y = "",
subtitle = "Total number of cases")
print(p)
